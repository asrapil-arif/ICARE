@using I_Care.Models
@{
    var ROLES = new I_Care.Classes.UserRoleProvider();
    ViewBag.Title = "Contract";
    ViewBag.Parent = "Contract";
    ViewBag.Child = "GeneralAffair";
    ViewBag.Child_Caption = "General Affair Task List";
    ViewBag.Icon = "<i class=\"ace-icon fa fa-list\"></i>";
    ViewBag.TopMenuAce = "Yes";



}

<style>

    .page-content {
        padding: 0px;
    }

    #ModContract label {
        font-size: 12px;
    }
</style>

<div id="gridContract" style="border:none;border-top:1px solid #ccc;border-radius:0px;" class="responsive"></div>


<!-- Modal -->
<div id="ModalViewSetting" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Setting Your Contract List View</h4>
            </div>
            <div class="modal-body">

                <p>Select contract status for view on your list</p>

                <div class="checkbox">
                    <label>
                        <input ìd="cehck_all" class="ace" type="checkbox">
                        <span class="lbl"> All</span>
                    </label>
                </div>

                <p style="border-bottom:1px dashed #dedede;"></p>

                <div class="checkbox">
                    <label>
                        <input ìd="cehck_left" class="ace" type="checkbox">
                        <span class="lbl"> Day Left</span>
                    </label>
                </div>

                <div class="checkbox">
                    <label>
                        <input ìd="cehck_disable" class="ace" type="checkbox">
                        <span class="lbl"> Disable</span>
                    </label>
                </div>

                <div class="checkbox">
                    <label>
                        <input ìd="cehck_expire" class="ace" type="checkbox">
                        <span class="lbl"> Expire</span>
                    </label>
                </div>

                <div class="checkbox">
                    <label>
                        <input ìd="cehck_overdue" class="ace" type="checkbox">
                        <span class="lbl"> Overdue</span>
                    </label>
                </div>

            </div>
            <div class="modal-footer">

                <button type="button" class="btn btn-info" data-dismiss="modal">Save</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>

            </div>
        </div>

    </div>
</div>

@Html.Partial("Modal/Form_Detail_Contract")

<script>

	var Gridheight = Number(window.innerHeight)-133;
	$('#gridContract').height(Gridheight);

	function resizegridCustomer() {
		$('#gridContract').css('height', Gridheight);
		//$('#gridCustomer').css('width', Gridwidth);
	}

	$(window).resize(function () {

		resizegridCustomer();

	});


    $('#gridContract').w2grid({
        name: 'gridContract',
        textSearch: 'contains',
        show: {

            header: false,
            toolbar: true,
            footer: true,
            lineNumbers: false,
            selectColumn: true,
            //toolbarEdit : true,
            @*@if (ROLES.CheckAllowModul(User.Identity.Name.ToString(), "MOD2018020002", 2) == true)
            {
            <text>toolbarAdd: true,</text>
            }
            @if (ROLES.CheckAllowModul(User.Identity.Name.ToString(), "MOD2018020002", 4) == true)
            {
            <text>toolbarDelete: true,</text>
            }*@
            toolbarSearch : false,
        },
         toolbar: {
                    items: [
                            //{ type: 'break' },
                            //{ type: 'button', id: 'view_detail', caption: '<i class="fa fa-eye" aria-hidden="true"></i> View',disabled:true },
                            //{ type: 'break' },
                            { type: 'button', id: 'addadendum', caption: '<i class="fa fa-plus" aria-hidden="true"></i> Add Addendum', disabled: true },
                            //{ type: 'button', id: 'disable', caption: '<i class="fa fa-ban" aria-hidden="true"></i> Disable',disabled:true },
                            //{ type: 'button', id: 'enable', caption: '<i class="fa fa-bell-o" aria-hidden="true"></i> Enable',disabled:true },
                            { type: 'button', id: 'done', caption: '<i class="fa fa-check" aria-hidden="true"></i> Done',disabled:true },
                            //{ type: 'button', id: 'report', caption: '<i class="fa fa-download"></i> Report', disabled: false },
                            { type: 'break' },
                            //{ type: 'button', id: 'bt_view_setting', caption: '<i class="fa fa-filter" aria-hidden="true"></i> View Filter'},
                    ],
                    onClick: function (target,data) {

                          switch (target) {
                                  //  case 'view_detail':
                                  //          var sel = w2ui.gridContract.getSelection();
                                  //          var record = w2ui.gridContract.get(sel[0]);
                                  //          form_contract_detail("EDIT",record);
                                  //break;
                              case 'addadendum':
                                  var sel = w2ui.gridContract.getSelection();
                                  var record = w2ui.gridContract.get(sel[0]);
                                  form_contract_detail("AddAdendum", record);
                                  break;
                                    case 'done':
                                            var sel = w2ui.gridContract.getSelection();
                                            var record = w2ui.gridContract.get(sel[0]);


                                            if(record.CreateUser != '@User.Identity.Name.ToString()'){

                                            w2alert("Anda bukan pembuat alert ini sehingga anda tidak mempunyai otoritas untuk mengubahnya !");
                                            return;
                                            }


                                            form_done(record);

                                    break;

                                    @*case 'enable':

                                         var sel = w2ui.gridContract.getSelection();
                                         var record = w2ui.gridContract.get(sel[0]);



                                                if(record.CreateUser != '@User.Identity.Name.ToString()'){

                                                     w2alert("Anda bukan pembuat alert ini sehingga anda tidak mempunyai otoritas untuk mengubahnya !");
                                                     return;
                                                }




                                        render_wait()

                                            var Simpan =   $.ajax({
                                            url: URL_PTR + '/Contract/ChangeSnooze?ContractId='+record.ContractId + "&Status=0",
                                            type: 'POST',
                                            dataType: "json",
                                            cache: false,
                                            async: false,
                                            contentType: false,
                                            processData: false,
                                            });

                                            if (Simpan.responseJSON["Result"] != "Error"){
                                                  w2alert("Alert has been enabled !");
                                                  clear_wait();
                                            }

                                            //w2ui['gridContract'].reload();
                                            RefreshContract();
                                            disable_button()
                                            w2ui['gridContract'].toolbar.enable('disable');


                                    break;
                                    case 'disable':


                                            var sel = w2ui.gridContract.getSelection();
                                            var record = w2ui.gridContract.get(sel[0]);


                                                    if(record.CreateUser != '@User.Identity.Name.ToString()'){

                                                         w2alert("Anda bukan pembuat alert ini sehingga anda tidak mempunyai otoritas untuk mengubahnya !");
                                                         return;
                                                    }



                                            render_wait()
                                            var Simpan =   $.ajax({
                                            url: URL_PTR + '/Contract/ChangeSnooze?ContractId='+record.ContractId + "&Status=1",
                                            type: 'POST',
                                            dataType: "json",
                                            cache: false,
                                            async: false,
                                            contentType: false,
                                            processData: false,
                                            });

                                            if (Simpan.responseJSON["Result"] != "Error"){
                                                  w2alert("Alert has been disabled !");
                                                  clear_wait();
                                            }

                                            RefreshContract()
                                            disable_button()
                                            w2ui['gridContract'].toolbar.enable('enable');
                                    break;
                                    case 'bt_view_setting':

                                            $('#ModalViewSetting').modal(
                                            {
                                            backdrop: 'static',
                                            keyboard: false
                                            }
                                            );

                                  break;*@
                              //case 'report':
                              //    //var sel = w2ui.info_report.download_report();
                              //    //var record = w2ui.info_report.get(sel[0]);
                              //    download_report(startdate,enddate);

                              //    break;

                              //case 'report':
                              //    //var sel = w2ui.info_report.download_report();
                              //    //var record = w2ui.info_report.get(sel[0]);
                              //    $('#info_report').modal(
                              //        {
                              //            backdrop: 'static',
                              //            keyboard: false
                              //        }

                              //    );
                             }


                    }
                },
        columns: [
            { field: 'ContractId', caption: 'Id.', size: '150px', sortable: true, searchable: 'text', resizable: true },
            { field: 'ContractNo', caption: 'Contract No.', size: '200px', sortable: true, searchable: 'text', resizable: true },
            { field: 'AddendumContractNo', caption: 'Addendum Contract No', size: '200px', resizable: true, sortable: true, searchable: 'text' },
            { field: 'ContractTitle', caption: 'Title', size: '300px', resizable: true, sortable: true, searchable: 'text', style: 'word-wrap:break-word;' },
            { field: 'Files', caption: 'Attachment', size: '100px', sortable: true, searchable: 'text', resizable: true },
            { field: 'AlertDestination', caption: 'Mail Destination', size: '300px', sortable: true, searchable: 'text', resizable: true },
            { field: 'ContractValue', caption: 'Value (Rp.)', size: '150px', resizable: true, sortable: true, searchable: 'text', render: 'number' },
            { field: 'ContractTypeName', caption: 'Contract Type', size: '200px', resizable: true, sortable: true, searchable: 'text' },
            { field: 'DayAlert', caption: 'Alert Status', size: '200px', sortable: true, searchable: 'text', resizable: true },
            { field: 'PenanggungJawabPihak1', caption: 'Contract Signing Officer', size: '300px', sortable: true, searchable: 'text', resizable: true },
            { field: 'fungsi', caption: 'fungsi', size: '300px', sortable: true, searchable: 'text', resizable: true },
            { field: 'VendorName', caption: 'Vendor Name', size: '300px', resizable: true, sortable: true, searchable: 'text', max: '400px' },

            /*
            { field: 'ContractDate', caption: 'Contract Date', size: '100px', resizable: true, sortable: true ,searchable: 'text' ,max:'400px'},
            { field: 'BeginDate', caption: 'Begin Date', size: '100px', resizable: true, sortable: true,searchable: 'text' ,max:'400px'},
            { field: 'EndDate', caption: 'End Date', size: '100px', resizable: true, sortable: true,searchable: 'text',max:'400px' },
            { field: 'NoPR', caption: 'PR No.', size: '100px', sortable: true, searchable: 'text', resizable: true,max:'400px' },
            { field: 'NoPO', caption: 'PO No.', size: '100px', sortable: true, searchable: 'text', resizable: true ,max:'400px'},
            */

            /*
            { field: 'ContractValue', caption: 'Value', size: '100px', resizable: true, sortable: true,searchable: 'text',render: 'number',max:'400px' },
            { field: 'ContractTypeName', caption: 'Contract Type', size: '100px', resizable: true, sortable: true,searchable: 'text' ,max:'400px'},
            { field: 'VendorName', caption: 'Vendor Name', size: '100px', resizable: true, sortable: true,searchable: 'text',max:'400px' },   
            */

            { field: 'Creator', caption: 'Creator', size: '200px', resizable: true, sortable: true, searchable: 'text', max: '400px' },
            { field: 'Updater', caption: 'Updater', size: '200px', resizable: true, sortable: true, searchable: 'text', max: '400px' },

        ],
        //onAdd: function (event) {
        //             form_contract_detail("ADD");
        //},
        onAddAddendum: function (event) {
            var record = this.get(event.recid);
            form_contract_detail("AddAdendum", record);
        },
        //onEdit: function (event) {

        //             var record = this.get(event.recid);
        //             form_contract_detail("EDIT",record);
        //    },
        @*onDelete: function (event) {

                var sel = this.getSelection();

                if (event.force == true){

                    render_wait();
                    sel.forEach(function(entry) {

                        var record = w2ui.gridContract.get(entry);

                        if(record.CreateUser != '@User.Identity.Name.ToString()'){

                                @if ((ROLES.CheckAccGroupIstrue(User.Identity.Name.ToString(), "ACCG2018010003") == true))
                                {

                                    <text>

                                        var Delete = $.ajax({
                                        type: "GET",
                                        url: URL_PTR + '/Contract/DeleteContract?ContractId=' + record.ContractId,
                                        dataType: 'json',
                                        cache: false,
                                        async: false,
                                        "autoWidth": false
                                        });
                                        clear_wait();

                                    </text>

                                }
                                else{

                                      <text>

                                            w2alert("Anda bukan pembuat alert ini sehingga anda tidak mempunyai otoritas untuk menghapusnya !");
                                            event.preventDefault();
                                            clear_wait();

                                      </text>

                                }
                        }else{

                                var Delete = $.ajax({
                                type: "GET",
                                url: URL_PTR + '/Contract/DeleteContract?ContractId=' + record.ContractId,
                                dataType: 'json',
                                cache: false,
                                async: false,
                                "autoWidth": false
                                });
                                clear_wait();
                        }

                    });
                }


            },
        onDblClick: function (event) {
                     var record = this.get(event.recid);
                     form_contract_detail("EDIT",record);
            },*@
        onReload: function (event) {
                     RefreshContract();
            },
        onSelect: function(event) {

                event.onComplete = function () {
                disable_button();
                var contract = w2ui.gridContract.getSelection();

                    if (contract.length == 1){

                        var record = this.get(event.recid);
                        //w2ui['gridContract'].toolbar.enable('view_detail');
                        w2ui['gridContract'].toolbar.enable('addadendum');
                        if(record.Done == null){
                            w2ui['gridContract'].toolbar.enable('done');
                        }

                        switch (record.Snooze) {
                                case 1:
                                if (record.Done != 'Y'){

                                    w2ui['gridContract'].toolbar.enable('enable');
                                }

                                break;
                                case 0:
                                w2ui['gridContract'].toolbar.enable('disable');
                                break;

                            }

                    }
                }

            },
           onUnselect: function(event) {

                event.onComplete = function () {
                disable_button();
                var contract = w2ui.gridContract.getSelection();

                    if (contract.length == 1){
                    var record = this.get(event.recid);
                    //w2ui['gridContract'].toolbar.enable('view_detail');

                        switch (record.Snooze) {
                                case '1':
                                w2ui['gridCustomer'].toolbar.enable('enable');
                                break;
                                case '0':
                                w2ui['gridCustomer'].toolbar.enable('disable');
                                break;

                            }

                    }
                }
            }
    });


    //function download_report(startdate, enddate) {
    function download_report() {
        debugger

        var startdate = $("#StartDateFDC").val();
        var enddate = $("#EndDateFDC").val()

        var url = URL_PTR + '/Reporting/ReportAllContract?starDate=' + startdate +'&endDate='+ enddate;
        var win = window.open(url, '_blank');

    }

    RefreshContract();

    function RefreshContract(){

        w2ui['gridContract'].load(URL_PTR + '/Contract/GeneralAffairDataTaskList');
    }


    function disable_button(){
        w2ui['gridContract'].toolbar.disable('addadendum');
        //w2ui['gridContract'].toolbar.disable('view_detail');
        //w2ui['gridContract'].toolbar.disable('enable');
       // w2ui['gridContract'].toolbar.disable('disable');
        w2ui['gridContract'].toolbar.disable('done');

    }



    function done_contract(Contract, ContractNo) {
        debugger
        if ($("#realisasi_date").val() == "") {

            w2alert('Tanggal Realisasi Wajib Disisi !');
            return;

        }
        else {

            var DataContract = new FormData();
            DataContract.append('RealDate', $("#realisasi_date").val());
            DataContract.append('ContractId', Contract);
            DataContract.append('ContractNo', ContractNo);
            DataContract.append('AddendumContractNo', Contract);

            $("#w2ui-popup").hide();

            render_wait();

            var Simpan = $.ajax({
                url: URL_PTR + '/Contract/DoneContract',
                type: 'POST',
                data: DataContract,
                dataType: "json",
                cache: false,
                async: false,
                contentType: false,
                processData: false,
            });

            if (Simpan.responseJSON["Result"] != "Error") {

                w2popup.close();

                clear_wait();
                RefreshContract();

            }
            else {
                alert('Data Kontrak ' + ContractNo + ' Masih berjalan di Kontrak Addendum');
                w2popup.close();
                clear_wait();
                RefreshContract();

            }


        }


    }


    function form_done(records) {
        debugger
        var bod = ' <div class="input-group" style="width:100%;">' +
            ' <input class="form-control date-picker" id="realisasi_date" data-date-format="dd-mm-yyyy" readonly="" type="text" style="text-align:center;">' +
            ' <span class="input-group-addon">' +
            ' <i class="fa fa-calendar bigger-110"></i>' +
            ' </span>' +
            ' </div>';

        w2popup.open({
            title: 'i-Care',
            body: '<div class="w2ui-centered">Masukan Tanggal Realisasi <br><br>' + bod + '</div>',
            buttons: '<button class="w2ui-btn" onclick="w2popup.close();">Cancel</button> ' +
                '<button class="w2ui-btn" onclick="done_contract(\'' + records.ContractId + '\',\'' + records.ContractNo + '\')" >Done</button>',
            width: 280,
            height: 200,
            overflow: 'hidden',
            color: '#333',
            speed: '0.3',
            opacity: '0.8',
            modal: true,
            showClose: true,
            showMax: false,
            onClose: function (event) { console.log('close'); },
            onMax: function (event) { console.log('max'); },
            onMin: function (event) { console.log('min'); },
            onKeydown: function (event) { console.log('keydown'); },
            onOpen: function (event) {

                event.onComplete = function () {

                    $('.date-picker').datepicker({
                        format: 'yyyy/mm/dd',
                        showButtonPanel: true, gotoCurrent: true
                    }
                    ).on('changeDate', function (ev) {
                        $(this).datepicker('hide');
                    })

                }



            }
        });


    }






    //Basic code , not function for core process .....****
    $('#contract_file,#contract_file_other').ace_file_input({
        style: 'well',
        btn_choose: 'Click Here to Upload',
        btn_change: null,
        no_icon: 'ace-icon fa fa-cloud-upload',
        droppable: true,
        thumbnail: 'small',
        preview_error: function (filename, error_code) {

        }
    }).on('change', function () {
    });


    $('.date-picker').datepicker({
    autoclose: true,
    todayHighlight: true,
    format: 'yyyy-mm-dd'
    })


    $(document).ready(function() {
    $("#nilai_perolehan_dta").keydown(function (e) {
    // Allow: backspace, delete, tab, escape, enter and .
    if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
    // Allow: Ctrl+A, Command+A
    (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||
    // Allow: home, end, left, right, down, up
    (e.keyCode >= 35 && e.keyCode <= 40)) {
    // let it happen, don't do anything
    return;
    }
    // Ensure that it is a number and stop the keypress
    if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
    e.preventDefault();
    }
    });
    });

</script>